{"version":3,"sources":["..\\..\\webpack/bootstrap dbdf6b17e9d1dd2a54c1","..\\..\\external \"vendor_a5a86878640dfc60743a\"","..\\..\\delegated ./node_modules/react/react.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\delegated ./node_modules/react-router/lib/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\delegated ./node_modules/react-redux/lib/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\delegated ./node_modules/react-router-redux/lib/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\./ClientApp/store/Counter.ts","..\\..\\./ClientApp/store/WeatherForecasts.ts","..\\..\\./ClientApp/configureStore.ts","..\\..\\./ClientApp/routes.tsx","..\\..\\./ClientApp/css/site.css","..\\..\\delegated ./node_modules/bootstrap/dist/js/npm.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\delegated ./node_modules/react-dom/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\./ClientApp/components/Counter.tsx","..\\..\\./ClientApp/components/FetchData.tsx","..\\..\\./ClientApp/components/Home.tsx","..\\..\\./ClientApp/components/Layout.tsx","..\\..\\./ClientApp/components/NavMenu.tsx","..\\..\\./ClientApp/store/index.ts","..\\..\\delegated ./node_modules/redux/es/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\delegated ./node_modules/domain-task/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\delegated ./node_modules/redux-thunk/lib/index.js from dll-reference vendor_a5a86878640dfc60743a","..\\..\\./ClientApp/boot-client.tsx"],"names":[],"mappings":"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","file":"main-client.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dbdf6b17e9d1dd2a54c1","module.exports = vendor_a5a86878640dfc60743a;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor_a5a86878640dfc60743a\"\n// module id = 0\n// module chunks = 0","module.exports = (__webpack_require__(0))(6);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react/react.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 1\n// module chunks = 0","module.exports = (__webpack_require__(0))(196);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react-router/lib/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 2\n// module chunks = 0","module.exports = (__webpack_require__(0))(194);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react-redux/lib/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 3\n// module chunks = 0","module.exports = (__webpack_require__(0))(195);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react-router-redux/lib/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 4\n// module chunks = 0","import { Action, Reducer } from 'redux';\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface CounterState {\r\n    count: number;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n// Use @typeName and isActionType for type detection that works even after serialization/deserialization.\r\n\r\ninterface IncrementCountAction { type: 'INCREMENT_COUNT' }\r\ninterface DecrementCountAction { type: 'DECREMENT_COUNT' }\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction = IncrementCountAction | DecrementCountAction;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    increment: () => <IncrementCountAction>{ type: 'INCREMENT_COUNT' },\r\n    decrement: () => <DecrementCountAction>{ type: 'DECREMENT_COUNT' }\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nexport const reducer: Reducer<CounterState> = (state: CounterState, action: KnownAction) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT_COUNT':\r\n            return { count: state.count + 1 };\r\n        case 'DECREMENT_COUNT':\r\n            return { count: state.count - 1 };\r\n        default:\r\n            // The following line guarantees that every action in the KnownAction union has been covered by a case above\r\n            const exhaustiveCheck: never = action;\r\n    }\r\n\r\n    // For unrecognized actions (or in cases where actions have no effect), must return the existing state\r\n    //  (or default initial state if none was supplied)\r\n    return state || { count: 0 };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/store/Counter.ts","import { fetch, addTask } from 'domain-task';\r\nimport { Action, Reducer, ActionCreator } from 'redux';\r\nimport { AppThunkAction } from './';\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface WeatherForecastsState {\r\n    isLoading: boolean;\r\n    startDateIndex: number;\r\n    forecasts: WeatherForecast[];\r\n}\r\n\r\nexport interface WeatherForecast {\r\n    dateFormatted: string;\r\n    temperatureC: number;\r\n    temperatureF: number;\r\n    summary: string;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n\r\ninterface RequestWeatherForecastsAction {\r\n    type: 'REQUEST_WEATHER_FORECASTS',\r\n    startDateIndex: number;\r\n}\r\n\r\ninterface ReceiveWeatherForecastsAction {\r\n    type: 'RECEIVE_WEATHER_FORECASTS',\r\n    startDateIndex: number;\r\n    forecasts: WeatherForecast[]\r\n}\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction = RequestWeatherForecastsAction | ReceiveWeatherForecastsAction;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    requestWeatherForecasts: (startDateIndex: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        // Only load data if it's something we don't already have (and are not already loading)\r\n        if (startDateIndex !== getState().weatherForecasts.startDateIndex) {\r\n            let fetchTask = fetch(`/api/SampleData/WeatherForecasts?startDateIndex=${ startDateIndex }`)\r\n                .then(response => response.json() as Promise<WeatherForecast[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_WEATHER_FORECASTS', startDateIndex: startDateIndex, forecasts: data });\r\n                });\r\n\r\n            addTask(fetchTask); // Ensure server-side prerendering waits for this to complete\r\n            dispatch({ type: 'REQUEST_WEATHER_FORECASTS', startDateIndex: startDateIndex });\r\n        }\r\n    }\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nconst unloadedState: WeatherForecastsState = { startDateIndex: null, forecasts: [], isLoading: false };\r\n\r\nexport const reducer: Reducer<WeatherForecastsState> = (state: WeatherForecastsState, action: KnownAction) => {\r\n    switch (action.type) {\r\n        case 'REQUEST_WEATHER_FORECASTS':\r\n            return {\r\n                startDateIndex: action.startDateIndex,\r\n                forecasts: state.forecasts,\r\n                isLoading: true\r\n            };\r\n        case 'RECEIVE_WEATHER_FORECASTS':\r\n            // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n            // handle out-of-order responses.\r\n            if (action.startDateIndex === state.startDateIndex) {\r\n                return {\r\n                    startDateIndex: action.startDateIndex,\r\n                    forecasts: action.forecasts,\r\n                    isLoading: false\r\n                };\r\n            }\r\n            break;\r\n        default:\r\n            // The following line guarantees that every action in the KnownAction union has been covered by a case above\r\n            const exhaustiveCheck: never = action;\r\n    }\r\n\r\n    return state || unloadedState;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/store/WeatherForecasts.ts","import { createStore, applyMiddleware, compose, combineReducers, GenericStoreEnhancer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { routerReducer } from 'react-router-redux';\r\nimport * as Store from './store';\r\n\r\nexport default function configureStore(initialState?: Store.ApplicationState) {\r\n    // Build middleware. These are functions that can process the actions before they reach the store.\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n    // If devTools is installed, connect to it\r\n    const devToolsExtension = windowIfDefined && windowIfDefined.devToolsExtension as () => GenericStoreEnhancer;\r\n    const createStoreWithMiddleware = compose(\r\n        applyMiddleware(thunk),\r\n        devToolsExtension ? devToolsExtension() : f => f\r\n    )(createStore);\r\n\r\n    // Combine all reducers and instantiate the app-wide store instance\r\n    const allReducers = buildRootReducer(Store.reducers);\r\n    const store = createStoreWithMiddleware(allReducers, initialState) as Redux.Store<Store.ApplicationState>;\r\n\r\n    // Enable Webpack hot module replacement for reducers\r\n    if (module.hot) {\r\n        module.hot.accept('./store', () => {\r\n            const nextRootReducer = require<typeof Store>('./store');\r\n            store.replaceReducer(buildRootReducer(nextRootReducer.reducers));\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n\r\nfunction buildRootReducer(allReducers) {\r\n    return combineReducers<Store.ApplicationState>(Object.assign({}, allReducers, { routing: routerReducer }));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/configureStore.ts","import * as React from 'react';\r\nimport { Router, Route, HistoryBase } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport Home from './components/Home';\r\nimport FetchData from './components/FetchData';\r\nimport Counter from './components/Counter';\r\n\r\nexport default <Route component={ Layout }>\r\n    <Route path='/' components={{ body: Home }} />\r\n    <Route path='/counter' components={{ body: Counter }} />\r\n    <Route path='/fetchdata' components={{ body: FetchData }}>\r\n        <Route path='(:startDateIndex)' /> { /* Optional route segment that does not affect NavMenu highlighting */ }\r\n    </Route>\r\n</Route>;\r\n\r\n// Enable Hot Module Replacement (HMR)\r\nif (module.hot) {\r\n    module.hot.accept();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/routes.tsx","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/css/site.css\n// module id = 9\n// module chunks = 0","module.exports = (__webpack_require__(0))(189);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/bootstrap/dist/js/npm.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 10\n// module chunks = 0","module.exports = (__webpack_require__(0))(193);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react-dom/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 11\n// module chunks = 0","import * as React from 'react';\r\nimport { Link } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { ApplicationState }  from '../store';\r\nimport * as CounterStore from '../store/Counter';\r\nimport * as WeatherForecasts from '../store/WeatherForecasts';\r\n\r\ntype CounterProps = CounterStore.CounterState & typeof CounterStore.actionCreators;\r\n\r\nclass Counter extends React.Component<CounterProps, void> {\r\n    public render() {\r\n        return <div>\r\n            <h1>Counter</h1>\r\n\r\n            <p>This is a simple example of a React component.</p>\r\n\r\n            <p>Current count: <strong>{ this.props.count }</strong></p>\r\n\r\n            <button onClick={ () => { this.props.increment() } }>Increment</button>\r\n        </div>;\r\n    }\r\n}\r\n\r\n// Wire up the React component to the Redux store\r\nexport default connect(\r\n    (state: ApplicationState) => state.counter, // Selects which state properties are merged into the component's props\r\n    CounterStore.actionCreators                 // Selects which action creators are merged into the component's props\r\n)(Counter);\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/components/Counter.tsx","import * as React from 'react';\r\nimport { Link } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { ApplicationState }  from '../store';\r\nimport * as WeatherForecastsState from '../store/WeatherForecasts';\r\n\r\n// At runtime, Redux will merge together...\r\ntype WeatherForecastProps =\r\n    WeatherForecastsState.WeatherForecastsState     // ... state we've requested from the Redux store\r\n    & typeof WeatherForecastsState.actionCreators   // ... plus action creators we've requested\r\n    & { params: { startDateIndex: string } };       // ... plus incoming routing parameters\r\n\r\nclass FetchData extends React.Component<WeatherForecastProps, void> {\r\n    componentWillMount() {\r\n        // This method runs when the component is first added to the page\r\n        let startDateIndex = parseInt(this.props.params.startDateIndex) || 0;\r\n        this.props.requestWeatherForecasts(startDateIndex);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: WeatherForecastProps) {\r\n        // This method runs when incoming props (e.g., route params) change\r\n        let startDateIndex = parseInt(nextProps.params.startDateIndex) || 0;\r\n        this.props.requestWeatherForecasts(startDateIndex);\r\n    }\r\n\r\n    public render() {\r\n        return <div>\r\n            <h1>Weather forecast</h1>\r\n            <p>This component demonstrates fetching data from the server and working with URL parameters.</p>\r\n            { this.renderForecastsTable() }\r\n            { this.renderPagination() }\r\n        </div>;\r\n    }\r\n\r\n    private renderForecastsTable() {\r\n        return <table className='table'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Temp. (C)</th>\r\n                    <th>Temp. (F)</th>\r\n                    <th>Summary</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.props.forecasts.map(forecast =>\r\n                <tr key={ forecast.dateFormatted }>\r\n                    <td>{ forecast.dateFormatted }</td>\r\n                    <td>{ forecast.temperatureC }</td>\r\n                    <td>{ forecast.temperatureF }</td>\r\n                    <td>{ forecast.summary }</td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n\r\n    private renderPagination() {\r\n        let prevStartDateIndex = this.props.startDateIndex - 5;\r\n        let nextStartDateIndex = this.props.startDateIndex + 5;\r\n\r\n        return <p className='clearfix text-center'>\r\n            <Link className='btn btn-default pull-left' to={ `/fetchdata/${ prevStartDateIndex }` }>Previous</Link>\r\n            <Link className='btn btn-default pull-right' to={ `/fetchdata/${ nextStartDateIndex }` }>Next</Link>\r\n            { this.props.isLoading ? <span>Loading...</span> : [] }\r\n        </p>;\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => state.weatherForecasts, // Selects which state properties are merged into the component's props\r\n    WeatherForecastsState.actionCreators                 // Selects which action creators are merged into the component's props\r\n)(FetchData);\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/components/FetchData.tsx","import * as React from 'react';\r\n\r\nexport default class Home extends React.Component<void, void> {\r\n    public render() {\r\n        return <div>\r\n            <h1>Hello, world!</h1>\r\n            <p>Welcome to your new single-page application, built with:</p>\r\n            <ul>\r\n                <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n                <li><a href='https://facebook.github.io/react/'>React</a>, <a href='http://redux.js.org'>Redux</a>, and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n                <li><a href='https://webpack.github.io/'>Webpack</a> for building and bundling client-side resources</li>\r\n                <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n            </ul>\r\n            <p>To help you get started, we've also set up:</p>\r\n            <ul>\r\n                <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n                <li><strong>Webpack dev middleware</strong>. In development mode, there's no need to run the <code>webpack</code> build tool. Your client-side resources are dynamically built on demand. Updates are available as soon as you modify any file.</li>\r\n                <li><strong>Hot module replacement</strong>. In development mode, you don't even need to reload the page after making most changes. Within seconds of saving changes to files, rebuilt React components will be injected directly into your running application, preserving its live state.</li>\r\n                <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and the <code>webpack</code> build tool produces minified static CSS and JavaScript files.</li>\r\n                <li><strong>Server-side prerendering</strong>. To optimize startup time, your React application is first rendered on the server. The initial HTML and state is then transferred to the browser, where client-side code picks up where the server left off.</li>\r\n            </ul>\r\n        </div>;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/components/Home.tsx","import * as React from 'react';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport interface LayoutProps {\r\n    body: React.ReactElement<any>;\r\n}\r\n\r\nexport class Layout extends React.Component<LayoutProps, void> {\r\n    public render() {\r\n        return <div className='container-fluid'>\r\n            <div className='row'>\r\n                <div className='col-sm-3'>\r\n                    <NavMenu />\r\n                </div>\r\n                <div className='col-sm-9'>\r\n                    { this.props.body }\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/components/Layout.tsx","import * as React from 'react';\r\nimport { Link } from 'react-router';\r\n\r\nexport class NavMenu extends React.Component<void, void> {\r\n    public render() {\r\n        return <div className='main-nav'>\r\n                <div className='navbar navbar-inverse'>\r\n                <div className='navbar-header'>\r\n                    <button type='button' className='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\r\n                        <span className='sr-only'>Toggle navigation</span>\r\n                        <span className='icon-bar'></span>\r\n                        <span className='icon-bar'></span>\r\n                        <span className='icon-bar'></span>\r\n                    </button>\r\n                    <Link className='navbar-brand' to={ '/' }>WebApplicationBasic</Link>\r\n                </div>\r\n                <div className='clearfix'></div>\r\n                <div className='navbar-collapse collapse'>\r\n                    <ul className='nav navbar-nav'>\r\n                        <li>\r\n                            <Link to={ '/' } activeClassName='active'>\r\n                                <span className='glyphicon glyphicon-home'></span> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to={ '/counter' } activeClassName='active'>\r\n                                <span className='glyphicon glyphicon-education'></span> Counter\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to={ '/fetchdata' } activeClassName='active'>\r\n                                <span className='glyphicon glyphicon-th-list'></span> Fetch data\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/components/NavMenu.tsx","import * as WeatherForecasts from './WeatherForecasts';\r\nimport * as Counter from './Counter';\r\n\r\n// The top-level state object\r\nexport interface ApplicationState {\r\n    counter: Counter.CounterState,\r\n    weatherForecasts: WeatherForecasts.WeatherForecastsState\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    counter: Counter.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n    (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/store/index.ts","module.exports = (__webpack_require__(0))(108);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/redux/es/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 18\n// module chunks = 0","module.exports = (__webpack_require__(0))(190);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/domain-task/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 19\n// module chunks = 0","module.exports = (__webpack_require__(0))(197);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/redux-thunk/lib/index.js from dll-reference vendor_a5a86878640dfc60743a\n// module id = 20\n// module chunks = 0","import './css/site.css';\r\nimport 'bootstrap';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { browserHistory, Router } from 'react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { syncHistoryWithStore } from 'react-router-redux';\r\nimport routes from './routes';\r\nimport configureStore from './configureStore';\r\nimport { ApplicationState }  from './store';\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst initialState = (window as any).initialReduxState as ApplicationState;\r\nconst store = configureStore(initialState);\r\nconst history = syncHistoryWithStore(browserHistory, store);\r\n\r\n// This code starts up the React app when it runs in a browser. It sets up the routing configuration\r\n// and injects the app into a DOM element.\r\nReactDOM.render(\r\n    <Provider store={ store }>\r\n        <Router history={ history } children={ routes } />\r\n    </Provider>,\r\n    document.getElementById('react-app')\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/boot-client.tsx"],"sourceRoot":""}